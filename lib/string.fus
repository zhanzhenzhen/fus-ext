fus 0.1.0
import "./main" all

deepSplit'export: (str, args) ->
    arr: str.split(args.0)
    if args.length = 2 and args.1 is Number
        if args.1 = 0
            [arr.join(args.0)]
        else if args.1 <= arr.length - 2
            arr |> ea.portion[0, args.1 - 1] :: concat[
                arr |> ea.portion[args.1] :: join(args.0)
            ]
        else
            arr
    else if args.length <= 1
        arr
    else
        arr.map(s -> s |> deepSplit(args |> ea.portion[1]))

stripTrailingNewline'export: str ->
    if str.(str.length - 2) = "\r" and str.(str.length - 1) = "\n"
        str.substr(0, str.length - 2)
    else if str.(str.length - 1) = "\n"
        str.substr(0, str.length - 1)
    else
        str.valueOf()
ensureTrailingNewline'export: str ->
    if str.(str.length - 1) /= "\n"
        str.valueOf() + "\n"
    else
        str.valueOf()
